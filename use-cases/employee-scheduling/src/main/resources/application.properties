########################
# Demo properties
########################

# The demo dataset size: NONE, SMALL, LARGE
# schedule.demoData=SMALL

########################
# OptaPlanner properties
########################

# The solver runs for 30 seconds. To run for 5 minutes use "5m" and for 2 hours use "2h".
quarkus.optaplanner.solver.termination.spent-limit=30s

# To change how many solvers to run in parallel
# optaplanner.solver-manager.parallel-solver-count=4
# To run increase CPU cores usage per solver
# quarkus.optaplanner.solver.move-thread-count=2

# Temporary comment this out to detect bugs in your code (lowers performance)
# quarkus.optaplanner.solver.environment-mode=FULL_ASSERT
# To see what OptaPlanner is doing, turn on DEBUG or TRACE logging.
quarkus.log.category."org.optaplanner".level=DEBUG
%test.quarkus.log.category."org.optaplanner".level=INFO
%prod.quarkus.log.category."org.optaplanner".level=INFO

# XML file for power tweaking, defaults to solverConfig.xml (directly under src/main/resources)
# quarkus.optaplanner.solver-config-xml=org/.../maintenanceScheduleSolverConfig.xml

########################
# Database properties
########################

# "jdbc:h2:mem" doesn't work in native mode, but native mode uses %prod properties
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:employee-scheduling;DB_CLOSE_DELAY=-1
quarkus.hibernate-orm.database.generation=drop-and-create

########################
# Test overrides
########################

%test.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:employee-scheduling

# Effectively disable spent-time termination in favor of the best-score-limit
%test.quarkus.optaplanner.solver.termination.spent-limit=1h
%test.quarkus.optaplanner.solver.termination.best-score-limit=0hard/*soft

########################
# Native overrides
########################

# In pom.xml, the "native" maven profile triggers the "native" quarkus profile.
%native.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:employee-scheduling

########################
# Optional overrides for use in OpenShift
########################
%openshift-native.quarkus.openshift.name=employee-scheduling
%openshift-native.quarkus.openshift.part-of=employee-scheduling
%openshift-native.quarkus.openshift.route.expose=true
%openshift-native.quarkus.datasource.db-kind=postgresql
%openshift-native.quarkus.datasource.jdbc.url=jdbc:postgresql://postgresql-employee-scheduling/app
# Shift has field end, which is a reserved keyword in postgres (end is not a keyword in H2),
# so we globally quote all identifiers to prevent issues.
%openshift-native.quarkus.hibernate-orm.database.globally-quoted-identifiers=true

# Note: Do not store username and password in application.properties for a production application;
#       Use .env or environment variables instead
%openshift-native.quarkus.datasource.username=app
%openshift-native.quarkus.datasource.password=app
