apiVersion: v1
items:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      labels:
        app: postgresql
        app.kubernetes.io/component: postgresql
        app.kubernetes.io/instance: postgresql
        app.kubernetes.io/part-of: employee-scheduling
        template: postgresql-ephemeral-template
      name: postgresql-employee-scheduling
    stringData:
      database-name: app
      database-password: app
      database-user: app
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
      labels:
        app: postgresql
        app.kubernetes.io/component: postgresql
        app.kubernetes.io/instance: postgresql
        app.kubernetes.io/part-of: employee-scheduling
        template: postgresql-ephemeral-template
      name: postgresql-employee-scheduling
    spec:
      ports:
        - name: postgresql-employee-scheduling
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        name: postgresql
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
        template.alpha.openshift.io/wait-for-ready: "true"
      labels:
        app: postgresql
        app.kubernetes.io/component: postgresql
        app.kubernetes.io/instance: postgresql
        app.kubernetes.io/part-of: employee-scheduling
        template: postgresql-ephemeral-template
      name: postgresql-employee-scheduling
    spec:
      replicas: 1
      selector:
        name: postgresql
      strategy:
        resources: {}
        type: Recreate
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            name: postgresql
        spec:
          containers:
            - env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: postgresql-employee-scheduling
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: postgresql-employee-scheduling
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: postgresql-employee-scheduling
              image: ' '
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                    - --live
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                initialDelaySeconds: 5
                timeoutSeconds: 1
              resources:
                limits:
                  memory: 512Mi
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: postgresql-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
            - emptyDir: {}
              name: postgresql-data
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              name: postgresql:10-el8
              namespace: openshift
          type: ImageChange
        - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
kind: List
metadata: {}